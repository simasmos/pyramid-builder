name: Claude Code Review

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request Number'
        required: true
        type: string
      review_focus:
        description: 'Review Focus'
        required: false
        type: choice
        default: 'comprehensive'
        options:
          - 'comprehensive'
          - 'security'
          - 'performance'
          - 'testing'
          - 'godot-specific'
  repository_dispatch:
    types: [claude-review-requested]

jobs:
  claude-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
    
    steps:
      - name: Get PR information
        id: pr-info
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            PR_NUMBER="${{ github.event.inputs.pr_number }}"
            REVIEW_FOCUS="${{ github.event.inputs.review_focus }}"
          elif [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            PR_NUMBER="${{ github.event.client_payload.pr_number }}"
            REVIEW_FOCUS="${{ github.event.client_payload.review_focus || 'comprehensive' }}"
          else
            echo "Unsupported event type: ${{ github.event_name }}"
            exit 1
          fi
          
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "review_focus=$REVIEW_FOCUS" >> $GITHUB_OUTPUT
          
          # Get PR details
          PR_INFO=$(gh pr view $PR_NUMBER --json headRefName,baseRefName,title,author)
          echo "pr_info=$PR_INFO" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Checkout PR branch
        run: |
          PR_BRANCH=$(echo '${{ steps.pr-info.outputs.pr_info }}' | jq -r '.headRefName')
          git fetch origin $PR_BRANCH
          git checkout $PR_BRANCH

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          
          # Use repository dispatch event for PR context
          github_event_name: ${{ github.event_name == 'repository_dispatch' && 'pull_request' || github.event_name }}
          github_event_payload: ${{ github.event_name == 'repository_dispatch' && github.event.client_payload.pr_payload || '' }}
          
          # Dynamic review prompt based on focus
          direct_prompt: |
            Please review this pull request (PR #${{ steps.pr-info.outputs.pr_number }}) with a focus on: **${{ steps.pr-info.outputs.review_focus }}**
            
            ${{ steps.pr-info.outputs.review_focus == 'comprehensive' && 'Provide comprehensive feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage
            - Godot 4.3 compatibility and patterns' || '' }}
            
            ${{ steps.pr-info.outputs.review_focus == 'security' && 'Focus specifically on security aspects:
            - Input validation and sanitization
            - Authentication and authorization
            - Data exposure risks
            - Secure coding practices
            - Potential vulnerabilities' || '' }}
            
            ${{ steps.pr-info.outputs.review_focus == 'performance' && 'Focus on performance considerations:
            - Algorithm efficiency
            - Memory usage and leaks
            - Godot-specific performance patterns
            - Frame rate impact
            - Resource loading optimization' || '' }}
            
            ${{ steps.pr-info.outputs.review_focus == 'testing' && 'Focus on testing aspects:
            - Test coverage completeness
            - Test quality and effectiveness
            - Edge cases and boundary conditions
            - GUT framework usage
            - Test maintainability' || '' }}
            
            ${{ steps.pr-info.outputs.review_focus == 'godot-specific' && 'Focus on Godot-specific considerations:
            - Godot 4.3 API usage and best practices
            - Scene structure and node organization
            - Signal usage and connections
            - Resource management
            - GDScript coding conventions' || '' }}
            
            Be constructive and helpful in your feedback. If this is a small change, keep the review proportional to the scope.
          
          # Enable tools for running tests and analysis
          allowed_tools: "Bash(godot --version),Bash(find . -name '*.gd' | head -10),Bash(grep -r 'extends' scripts/)"
      
      - name: Notify review completion
        if: always()
        run: |
          echo "Claude code review completed for PR #${{ steps.pr-info.outputs.pr_number }}"
          echo "Review focus: ${{ steps.pr-info.outputs.review_focus }}"
          echo "Status: ${{ job.status }}"


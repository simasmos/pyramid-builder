name: Claude Review Trigger

on:
  issue_comment:
    types: [created]

jobs:
  trigger-claude-review:
    if: |
      github.event.issue.pull_request &&
      (
        contains(github.event.comment.body, '/claude-review') ||
        contains(github.event.comment.body, '/review-comprehensive') ||
        contains(github.event.comment.body, '/review-security') ||
        contains(github.event.comment.body, '/review-performance') ||
        contains(github.event.comment.body, '/review-testing') ||
        contains(github.event.comment.body, '/review-godot')
      )
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      actions: write
    
    steps:
      - name: Parse comment and trigger review
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const comment = context.payload.comment.body;
            const pr_number = context.payload.issue.number;
            
            // Determine review focus from comment
            let review_focus = 'comprehensive';
            if (comment.includes('/review-security')) review_focus = 'security';
            else if (comment.includes('/review-performance')) review_focus = 'performance';
            else if (comment.includes('/review-testing')) review_focus = 'testing';
            else if (comment.includes('/review-godot')) review_focus = 'godot-specific';
            
            // React to the comment
            await github.rest.reactions.createForIssueComment({
              owner,
              repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            });
            
            // Trigger the Claude review workflow
            await github.rest.actions.createWorkflowDispatch({
              owner,
              repo,
              workflow_id: 'claude-code-review.yml',
              ref: 'master',
              inputs: {
                pr_number: pr_number.toString(),
                review_focus: review_focus
              }
            });
            
            // Add a response comment
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: pr_number,
              body: `ðŸ¤– Claude code review initiated with focus: **${review_focus}**\n\nThe review will be posted as a comment when complete. You can monitor progress in the [Actions tab](https://github.com/${owner}/${repo}/actions/workflows/claude-code-review.yml).`
            });